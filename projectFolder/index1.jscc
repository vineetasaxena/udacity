const EthereumTx = require('ethereumjs-tx').Transaction

var Web3 = require('web3')

var web3 = new Web3('http://127.0.0.1:7545')

//Setting Receiving and Sending Address

var sendingAddress = '0x0F9A1c01426549a05e9c137be274FDe455bc278b'

var receivingAddress = '0x2283b3783464396e771C37fE47905b74B6310322'

//Checking the balance of each account in ether

web3.eth.getBalance(sendingAddress).then(console.log)
web3.eth.getBalance(receivingAddress).then(console.log)

//Creating a transaction

/*var rawTransaction ={
    nonce: web3.utils.toHex(5),
    to: receivingAddress,
    gasPrice: web3.utils.toHex(20000000),
    gasLimit: web3.utils.toHex(30000),
    value: web3.utils.toHex(1),
    data: web3.utils.toHex("")
}
// -- Step 5: View the raw transaction 
rawTransaction
//Sign the Transaction

var privateKey = '0f4b7fb70ef37a817e608be3a8bf8679d39543938c6be7ef8efa1147babd5c1f'

var senderPrivateKeyHex = new Buffer.from(privateKey,'hex')

var transaction = new EthereumTx(rawTransaction)

transaction.sign(senderPrivateKeyHex)

//Send transaction to the network

var serializedTransaction = transaction.serialize()

web3.eth.sendSignedTransaction(serializedTransaction)*/
var blockhash = '0xd9dbcfc9cde74c38096f85241a5bb416ea2e3da9e9a192ae4f3af2cbd652f6a'
var txhash ='0xe14abd0da81a37e20334ab60ed989a5ee4165117248e1f7a9e1d56e7b775e3f9'
web3.eth.getGasPrice()
.then(console.log);
web3.eth.getUncle(4, 0)
.then(console.log);
web3.eth.getBlockTransactionCount(4)
.then(console.log);
web3.eth.getTransaction(txhash)
.then(console.log);